stages:
  - test
  - build
  - publish

# default release in rust:nightly image is stable
image:                             parity/rust:nightly

variables:
  CI_SERVER_NAME:                  "GitLab CI"
  CARGO_HOME:                      "${CI_PROJECT_DIR}/.cargo"


cache:
  key:                             "${CI_JOB_NAME}"
  paths:
    - ./.cargo/


.collect_artifacts:                &collect_artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
    - target/release/polkadot

.determine_version: &determine_version |
  export VERSION="$(sed -r -n '1,/^version/s/^version = "([^"]+)".*$/\1/p' Cargo.toml)";
  echo "Version = " $VERSION


before_script:
  - ./scripts/build.sh


#### stage:                        test

test:rust:release:
  stage:                           test
  only:
    - triggers
    - tags
    - master
    - schedules
    - web
  tags:
    - rust
  script:
    - time cargo test --all --release


#### stage:                        build

build:rust:linux:release:
  stage:                           build
  <<:                              *collect_artifacts
  only:
    - master
    - tags
    - web
  tags:
    - rust
  script:
    - cargo build --release


#### stage:                        publish

dockerize:release:
  stage:                           publish
  dependencies:
    - build:rust:linux:release
  cache: {}
  only:
    - master
    - tags
    - web
  tags:
    - shell
  # image: docker:stable
  # services:
  #   - docker:dind
  variables:
    # DOCKER_HOST: tcp://localhost:2375
    # DOCKER_DRIVER: overlay2
    DOCKERFILE: scripts/docker/Dockerfile
    CONTAINER_IMAGE: parity/polkadot
  before_script:
    - docker login -u $Docker_Hub_User_Parity -p $Docker_Hub_Pass_Parity
    - docker info
  script:
    - CONTAINER_TAG="${CI_COMMIT_TAG:-latest}"
    - docker build --tag $CONTAINER_IMAGE:$CI_BUILD_REF --tag $CONTAINER_IMAGE:$CONTAINER_TAG -f $DOCKERFILE ./target/release/
    - docker push $CONTAINER_IMAGE:$CONTAINER_TAG
    - docker push $CONTAINER_IMAGE:$CI_BUILD_REF
    - docker logout


